{"version":3,"sources":["components/container/Container.module.css","components/container/Container.jsx","components/form/Form.jsx","components/filter/Filter.jsx","components/contactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","Container","name","tel","handleChange","handleSubmit","nemeInputId","numberInputId","onSubmit","className","styles","form","htmlFor","type","pattern","title","required","id","onChange","formInput","formButton","Form","state","number","shortid","generate","handleInputChange","event","setState","currentTarget","value","preventDefault","props","this","React","Component","Filter","handleFilterChange","ContactList","contacts","filter","deleteButtonHandler","normalizedFilter","toLowerCase","filteredList","contact","includes","map","onClick","uuidv4","App","formSubmitHandler","data","some","alert","newContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e749c2dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Container_form__3lOFH\",\"formInput\":\"Container_formInput__1ZbQ3\",\"formButton\":\"Container_formButton__2EHAB\"};","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\n\r\nexport default function Container({name,tel,handleChange,handleSubmit,nemeInputId, numberInputId}){\r\n\r\n return(\r\n  <div>\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <label htmlFor={nemeInputId}>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={nemeInputId}\r\n          onChange={handleChange}\r\n          className = {styles.formInput}\r\n        />\r\n      </label>\r\n      <label htmlFor={numberInputId}>Number:\r\n        <input \r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          className = {styles.formInput}\r\n          id={{numberInputId}}>\r\n            {tel}\r\n        </input>\r\n      </label>\r\n      <button className={styles.formButton}>Add contact</button>\r\n    </form>\r\n  </div>\r\n )\r\n}","import React from 'react';\r\nimport Container from '../container/Container';\r\nimport shortid from 'shortid';\r\n\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  nemeInputId=shortid.generate();\r\n  numberInputId=shortid.generate();\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      [event.currentTarget.name]: event.currentTarget.value, \r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <div>\r\n      <Container \r\n        name={this.state.name}\r\n        nemeInputId={this.nemeInputId}\r\n        numberInputId={this.numberInputId}\r\n        handleChange={this.handleInputChange}\r\n        handleSubmit={this.handleSubmit}\r\n      />\r\n      \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nexport default function Filter({handleFilterChange}){\r\n  return (<div>\r\n    <span>Find contact by name</span>\r\n    <label>\r\n      <input \r\n        type=\"text\"\r\n        onChange={handleFilterChange}>  \r\n      </input>\r\n    </label>\r\n  </div>)\r\n}\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function ContactList ({contacts, filter, deleteButtonHandler}){\r\n\r\n  const normalizedFilter = filter.toLowerCase()\r\n  const filteredList = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\r\n\r\n\r\n  return ( \r\n  <div>\r\n    <h2>Contacts: </h2><br />\r\n    <ul>{filteredList.map(contact =>\r\n      <li key={uuidv4()}>\r\n        {contact.name}: {contact.number}\r\n        <button type=\"button\" onClick={ () => deleteButtonHandler(contact.name) }>\r\n          Delete\r\n        </button>\r\n      </li>\r\n      )}\r\n    </ul>\r\n  </div>)\r\n}\r\n","import React from 'react';\nimport './App.css'; \nimport Form from './components/form/Form'\nimport Filter from './components/filter/Filter';\nimport ContactList from './components/contactList/ContactList';\n\nclass App extends React.Component {\n  state = {\n    contacts: [{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},],\n    filter:'',\n  }\n\n  formSubmitHandler = data => {\n    const normalizedFilter = data.name.toLowerCase();\n    \n    if (this.state.contacts.some(contact => contact.name.toLowerCase()===normalizedFilter)){\n      alert(`The name ${data.name} already exists.`)\n      return;\n    }\n\n    this.setState({ \n      contacts: [...this.state.contacts, {\n      name: data.name,\n      number: data.number,\n      }] \n    });\n  }\n\n  handleFilterChange = (event) => {\n    this.setState({ \n      filter: event.currentTarget.value, \n    });\n  }\n\n  deleteButtonHandler = name => {\n    const newContacts = this.state.contacts.filter(contact => contact.name !== name);\n    this.setState({\n      contacts: newContacts\n  });\n} \n\n  render(){\n    return (\n    <div>\n      <h1>Phonebook</h1><br/>\n      <Form\n        onSubmit={ this.formSubmitHandler }\n        // contacts={ this.contacts}\n      />\n\n      <Filter\n        handleFilterChange={this.handleFilterChange}\n      />\n      \n      <ContactList\n        contacts={this.state.contacts}\n        filter={this.state.filter}\n        deleteButtonHandler={this.deleteButtonHandler}\n      />\n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}